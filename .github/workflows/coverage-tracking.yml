name: Coverage Tracking & Historical Analysis

on:
  schedule:
    # Run daily at 2 AM UTC to track coverage trends
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering
  push:
    branches: [main, develop]
    paths:
      - 'app/**'
      - 'tests/**'
      - 'requirements.txt'

jobs:
  coverage-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for trend analysis
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests with coverage
      run: |
        python -m pytest tests/ \
          --cov=app \
          --cov-report=xml \
          --cov-report=html \
          --cov-report=term-missing \
          --cov-fail-under=80
        
    - name: Generate coverage trends report
      run: |
        echo "# 📊 Coverage Trends Analysis" > coverage-trends.md
        echo "" >> coverage-trends.md
        echo "## 📅 Analysis Date" >> coverage-trends.md
        echo "- **Generated**: $(date -u)" >> coverage-trends.md
        echo "- **Repository**: ${{ github.repository }}" >> coverage-trends.md
        echo "- **Branch**: ${{ github.ref_name }}" >> coverage-trends.md
        echo "" >> coverage-trends.md
        
        # Extract current coverage statistics
        if [ -f coverage.xml ]; then
          echo "## 📈 Current Coverage Status" >> coverage-trends.md
          echo '```' >> coverage-trends.md
          coverage report --show-missing >> coverage-trends.md
          echo '```' >> coverage-trends.md
          echo "" >> coverage-trends.md
        fi
        
        echo "## 🔍 Coverage Breakdown" >> coverage-trends.md
        echo "- **Target Coverage**: 80%" >> coverage-trends.md
        echo "- **Coverage Threshold**: 5%" >> coverage-trends.md
        echo "- **Status**: ${{ github.event_name == 'schedule' && 'Scheduled Analysis' || 'Push Triggered' }}" >> coverage-trends.md
        echo "" >> coverage-trends.md
        
        echo "## 📊 Historical Data Sources" >> coverage-trends.md
        echo "- **Codecov**: [Coverage History](https://codecov.io/gh/${{ github.repository }})" >> coverage-trends.md
        echo "- **GitHub Actions**: [Test History](https://github.com/${{ github.repository }}/actions)" >> coverage-trends.md
        echo "" >> coverage-trends.md
        
        echo "## 🎯 Coverage Goals" >> coverage-trends.md
        echo "- **Short-term**: Maintain >80% coverage" >> coverage-trends.md
        echo "- **Medium-term**: Achieve >85% coverage" >> coverage-trends.md
        echo "- **Long-term**: Achieve >90% coverage" >> coverage-trends.md
        echo "" >> coverage-trends.md
        
        echo "## 📋 Files with Low Coverage" >> coverage-trends.md
        if [ -f coverage.xml ]; then
          echo '```' >> coverage-trends.md
          coverage report --show-missing | grep -E "^\s*[0-9]+%" | sort -n | head -10 >> coverage-trends.md
          echo '```' >> coverage-trends.md
        fi
        
    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v4
      with:
        name: coverage-analysis-${{ github.run_number }}
        path: |
          coverage.xml
          htmlcov/
          coverage-trends.md
        retention-days: 365  # Keep for a year for historical analysis
        
    - name: Comment on PR with coverage analysis
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const trends = fs.readFileSync('coverage-trends.md', 'utf8');
          
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: trends
          });
